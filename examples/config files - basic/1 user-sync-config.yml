dashboard:
  # specifies the configurations for the Adobe Enterprise Dashboards.  
  # By default, it would look for dashboard-owning-config.yml and
  # dashboard-accessor-*-config.yml in the configuration path,
  # with the yml's identifying the owning organization and accessor organizations
  # respectively.
  #  
  # You can also specify the configurations under this section too,
  # with keys owning and accessors.
  #
  # Examples:
  # owning: example.dashboard-config.yml
  # accessors:
  #   org1: example.dashboard-config.yml    

  # specifies the filename format for the accessor org configurations.  
  # a filename that matches the format will have the organization name extracted 
  # from the filename. Default is:
  # accessor_config_filename_format: "dashboard-accessor-{organization_name}-config.yml"

directory:
  # (optional) Default country code to use if directory doesn't provide one for a user [Must be two-letter ISO-3166 code - see https://en.wikipedia.org/wiki/ISO_3166-1]
  #
  # example:
  # default_country_code: US
  
  connectors:
    # specifies the configurations for the different directory connectors
    # The format is name : value, where value can be:
    # a dictionary for the actual configuration, or 
    # a string for the file containing the configuration, or
    # a list containing a mixture of dictionaries and strings
    #
    # examples:   
    # ldap: example.connector-ldap.yml
    # ldap: 
    #   - host: LDAP_host_URL_goes_here
    #     base_dn: base_DN_goes_here
    #   - connector-ldap-credentials.yml
 
  groups:
    # specifies the list of group mappings, with each group mapping consisting
    # of a dictionary with keys: directory_group and dashboard_groups.    
    # directory_group: string identifying the group in the directory
    # dashboard_groups: a list of strings identifying the dashboard groups.
    #
    # a group in dashboard_groups can be qualified with, the first part being
    # the accessor organization name.
    # e.g. org1::Default Acrobat Pro DC configuration
    #
    # examples:
    # - directory_group: AdobeCC-All #Group CN
    #   dashboard_groups:
    #     - All Apps
    # - directory_group: AdobeCC-Photoshop
    #   dashboard_groups:
    #     - Photoshop Users
    # - directory_group: acrobat
    #   dashboard_groups:
    #     - org1::Default Acrobat Pro DC configuration

  # specifies the default identity type of the dashboard user to create,
  # when the identity type of a user is missing.  
  # valid values are: adobeID, enterpriseID, federatedID
  # 
  # Default is:
  # user_identity_type: enterpriseID

  # specifies the identity types that User Sync will create, manage,
  # or remove on the Adobe side. This is a list of values,
  # each of which must be: adobeID, enterpriseID, or federatedID
  #
  # NOTE 1: if you specify that adobeID users should be removed from
  # your organization, you will have to re-invite them (and have them
  # re-accept) if you ever want to add them back in.  A much safer
  # practice, with such users, is simply to remove them from all
  # user groups and product configurations, but to leave them in
  # the organization so they can later be re-enabled.
  #
  # NOTE 2: since sysadmins are often of type adobeID, it can be
  # *very dangerous* to specify that adobeID users should be removed
  # from the dashboard: you may accidentally remove yourself or
  # other sysadmins that you weren't aware of.
  #
  # Default is:
  # managed_identity_types:
  #   - enterpriseID
  #   - federatedID

limits:
    max_deletions_per_run: 10    # if --remove-nonexistent-users is specified, this is the most users that will be removed.  Others will be left for a later run.  A critical message will be logged.
    max_missing_users: 200       # if more than this number of user accounts are not found in the directory, user sync will abort with an error and a critical message will be logged.

logging:
  # specifies whether you wish to generate a log file
  # 'True' or 'False'
  log_to_file: True
  # output path for logs
  file_log_directory: logs
  # File Logging Level: Can be "debug", "info", "warning", "error", or "critical".  
  # This is in ascending order, meaning "debug" < "critical".
  file_log_level: debug
  # Console Logging Level: Can be "debug", "info", "warning", "error", or "critical".  
  # This is in ascending order, meaning "debug" < "critical".  Default is:
  # console_log_level: debug